@{
    ViewBag.Title = "HRMS";
}
@model HrmsMvc.Models.LoginModel

<!DOCTYPE html>
<html>
<head>
    <title>ResetPassword</title>
</head>
<body>
    <div id="wrapper">
        <section>
            @using (Html.BeginForm("ResetPassword", "Login", FormMethod.Post, new { id = "paswdResetForm" }))
            {
                @Html.AntiForgeryToken()
                <form autocomplete="off" method="post">
                    <div class="waitIconDiv col-lg-12 col-md-12 col-xs-12 col-sm-12 text-center">
                        <img alt="Progress" src="~/Content/Images/wait_icon.gif" width="50" height="50" id="imgProg" />
                    </div>
                    <div class="login-card">
                        <div id="pwdResetDiv">
                            <div class="row">
                                <h3 class="modal-title text-center">Reset Password</h3>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.Label("New password", new { @class = "control-label" })
                                        @Html.PasswordFor(model => model.Password, new { @class = "form-control"})
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @style = "float:left;", @class = "text-danger", @id = "ErrorMsgPwd" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        @Html.Label("Retype new password", new { @class = "control-label" })
                                        @Html.PasswordFor(model => model.CnfrmPassword, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CnfrmPassword, "", new { @style = "float:left;", @class = "text-danger", @id = "ErrorMsgCnfPwd" })

                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row text-center pull-right">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <input type="submit" class="login login-submit btn btn-primary btn-fill" value="Submit"
                                           id="pwdResetSubmitBtn" name="actionName" />
                                </div>
                            </div>
                        </div>
                        <div id="pwdResetSuccDiv" style="display:none">
                            <div class="row">
                                <h3 class="modal-title text-center">Your password has been changed successfully</h3>
                            </div>
                            <br />
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 text-center">
                                    <a href="~/Login/Login" class="hrefLink">Click here to login</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            }
        </section>
    </div>
</body>
</html>
<script>
    $(document).ready(function () {        
        $('#pwdResetDiv').show();
        $('#pwdResetSuccDiv').hide();
        function clearValues() {
            $('#Password').val('');
            $('#CnfrmPassword').val('');
        }
        function resetValidation() {
            $('#Password').css('border-color', '');
            $('#CnfrmPassword').css('border-color', '');
            $('#ErrorMsgPwd').hide();
            $('#ErrorMsgCnfPwd').hide();
        }
        function showLoad() {
            $(".waitIconDiv").show();
            $(".login-card").addClass("disablediv");
            $(".waitIconDiv").css("display", "block");
        }
        function HideLoad() {
            $(".waitIconDiv").hide();
            $(".login-card").removeClass("disablediv");
            $(".waitIconDiv").css("display", "none");
        }
        clearValues();
        $('#Password').on('blur', function () {
            if (this.value.toString().length <= 0) {
                $('#Password').css('border-color', 'red');
                $('#ErrorMsgPwd').text("Please enter password");
                $('#ErrorMsgPwd').show();
            }
            else {
                $('#ErrorMsgPwd').hide();
                $('#Password').css('border-color', '');
            }
        });
        $('#CnfrmPassword').on('change keyup paste blur', function () {
            if (this.value.toString().length <= 0) {
                $('#CnfrmPassword').css('border-color', 'red');
                $('#ErrorMsgCnfPwd').text("Please enter password again to confirm");
                $('#ErrorMsgCnfPwd').show();
            }
            else {
                if (($('#Password').val().length > 0 && $('#CnfrmPassword').val().length > 0) && ($('#Password').val() != $('#CnfrmPassword').val())) {
                    $('#CnfrmPassword').css('border-color', 'red');
                    $('#ErrorMsgCnfPwd').text("Confirm password doesn't match");
                    $('#ErrorMsgCnfPwd').show();
                }
                else {
                    $('#CnfrmPassword').css('border-color', '');
                    $('#ErrorMsgCnfPwd').text("Please enter password again to confirm");
                    $('#ErrorMsgCnfPwd').hide();
                }
            }
        });
        $("#paswdResetForm").submit(function () {
            try {
                var f = $("#paswdResetForm");
                {
                    resetValidation();
                    showLoad();
                    $.post(f.action, f.serialize(), function (result) {                       
                        if (result != null) {
                            HideLoad();
                            var status = result["status"];
                            var erroMsg = result["rtrnMsg"];
                            if (status) {
                                clearValues();
                                $('#pwdResetDiv').hide();
                                $('#pwdResetSuccDiv').show();
                            }
                            else if (!stringIsNull(erroMsg)) {
                                $('#ErrorMsgCnfPwd').hide();
                                var resStr = erroMsg.split(':');
                                for (var i = 0; i < resStr.length; i++) {
                                    if (resStr[i] == "NP") {
                                        $('#Password').css('border-color', 'red');
                                        $('#ErrorMsgPwd').show();
                                        $('#ErrorMsgPwd').text("Please enter password");
                                    }
                                    if (resStr[i] == "NPC") {
                                        $('#CnfrmPassword').css('border-color', 'red');
                                        $('#ErrorMsgCnfPwd').show();
                                        $('#ErrorMsgCnfPwd').text("Please enter password again to confirm");
                                    }
                                    if (resStr[i] == "PM") {
                                        $('#CnfrmPassword').css('border-color', 'red');
                                        $('#ErrorMsgCnfPwd').show();
                                        $('#ErrorMsgCnfPwd').text("Confirm password doesn't match");
                                    }
                                    if (resStr[i] == "ERROR") {
                                        showMessageBox(ERROR, "An unexpected error occured !!");
                                    }
                                }
                            }
                        }
                    });
                }
                return false;
            }
            catch (e) {
                showMessageBox(ERROR, "An unexpected error occured !!");
            }
        });
    });
</script>
