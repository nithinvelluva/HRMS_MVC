@model HrmsMvc.Models.EmployeeModel
@{
    SelectList roleList = @ViewBag.RoleList;
    SelectList desigList = ViewBag.DesigList;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <title>Users</title>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />
</head>
<body>
    <div class="WaitdivPage row text-center">
        <img alt="Progress" src="~/Content/Images/wait_icon.gif" width="50" height="50" id="imgProg" />
    </div>  
    <div class="container-fluid usercontainer">
        <div class="row">
            <div class="col-lg-5 col-md-5 col-sm-5 col-xs-12">
                <div id="custom-search-input">
                    <div class="input-group">
                        <input type="text" class="form-control" placeholder="Search.." id="empSearchBox" />
                        <span class="input-group-btn">
                            <button class="btn btn-info btn-lg" type="button" id="empSearchBoxBtn" onclick="empSearch()">
                                <i class="fa fa-search fa-lg"></i>
                            </button>
                        </span>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-12">
                <br />
            </div>
            <div class="col-lg-4 col-md-4 col-sm-4 col-xs-12">
                <span class="input-group-btn pull-left">
                    <button class="btn btn-info btn-lg btn-fill" type="button" id="empRefreshBtn"
                            onclick="showLoad();UpdateEmpTable(1);$('#cardContainer').empty();blockNumber=1;" style="border-radius: 5px;">
                        <i class="fa fa-refresh" aria-hidden="true"></i>
                    </button>
                </span>
                <span class="pull-right">
                    <button class="btn btn-primary btn-fill" type="button" data-toggle="modal"
                            onclick="AddEmployee()" data-target="#AddEmpModal">
                        <i class="fa fa-user-plus" aria-hidden="true"></i>
                    </button>
                </span>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-12">                
                <div class="row" id="cardContainer">
                </div>
                <div id="loadingDiv" style="text-align: center; display: none; margin-bottom: 20px;">
                    <img alt="Loading" width="50" height="50" src="@Url.Content("~/Content/Images/wait_icon.gif")" />
                </div>                
            </div>
        </div>
    </div>

    <div class="modal fade col-xs-12 col-md-12 col-lg-12 col-sm-12" id="AddEmpModal" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content hrms-modal-height">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h3 class="modal-title text-center">Add Employee</h3>
                </div>
                <div class="modal-body" style="min-height:150px">
                    <form id="addEmpform" method="post" action="ManageEmployee">
                        @Html.Hidden("IDNew")
                        <div class="row" id="EmpIdRow">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.EmpID, htmlAttributes: new { @class = "labelclass" })
                                    @Html.EditorFor(model => model.EmpID, new { htmlAttributes = new { @class = "form-control inputField", @id = "EmpId", @disabled = "disabled", maxlength = 20 } })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.Label("Employee name", htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    @Html.EditorFor(model => model.EmpName, new { htmlAttributes = new { @class = "form-control inputField", @id = "EmpName", placeholder = "Employee name", maxlength = 20 } })
                                    @Html.Label("Enter Employee Name !", new { id = "lblempname", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            @Html.HiddenFor(model => model.Gender)
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    <div class="row">
                                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                                            @Html.RadioButton("GenderMale", false, new { @id = "Empgendermale" }) @Html.Label("Male")
                                        </div>
                                        <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                                            @Html.RadioButton("GenderFemale", false, new { @id = "Empgenderfemale" }) @Html.Label("Female")
                                        </div>
                                        @Html.Label("Select Gender !", new { id = "lblgender", @class = "text-danger errLabel" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.HiddenFor(model => model.Usertype)
                                    @Html.Label("User role", htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    @Html.DropDownList("UserRole", roleList, "Select Role", new { @class = "form-control inputField", @id = "roleDropDwn" })
                                    @Html.Label("Select User Role !", new { id = "lbluserrole", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.HiddenFor(model => model.DesigType)
                                    @Html.Label("Designation", htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    @Html.DropDownList("EmpDesig", desigList, "Select Designation", new { @class = "form-control inputField", @id = "desigDrpDwn" })
                                    @Html.Label("Select Employee designation !", new { id = "lblempDesig", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="row" id="UserPhotoRow">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.HiddenFor(model => model.UserPhotoPath)
                                    @Html.Label("Select Photo", htmlAttributes: new { @class = "labelclass" })
                                    <input type="file" class="btn btn-default btn-file inputField form-control" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                                    @Html.Label("Select A File!", new { id = "ErrlblUserPhoto", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.Label("Date Of Birth", htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    @Html.TextBox("DateOfBirth", "", new { @class = "form-control inputField", @id = "EmpDateOfBirth", placeholder = "Date Of Birth", maxlength = 10 })
                                    @Html.Label("Select Date of birth !", new { id = "ErrlblDateOfBirth", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.Label("Phone number", htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    @Html.TextBox("PhoneNumber", "", new { @class = "form-control inputField", @id = "EmpPhoneNumber", placeholder = "1234567890", maxlength = 10 })
                                    @Html.Label("Enter Phonenumber !", new { id = "lblphonenumber", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.Label("Email id", htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    @Html.TextBox("EmailId", "", new { @class = "form-control inputField", @id = "EmpEmailId", placeholder = "name@domain.com" })
                                    @Html.Label("Enter Email Id !", new { id = "lblEmailId", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="form-group">
                                    @Html.Label("Username", htmlAttributes: new { @class = "labelclass hrms-required-field" })
                                    @Html.TextBox("UserName", "", new { @class = "form-control inputField", @id = "EmpUserName", placeholder = "UserName", maxlength = 10 })
                                    @Html.Label("Enter Username !", new { id = "lblusername", @class = "text-danger errLabel" })
                                    @Html.Label("Username already in use !", new { id = "lblDupUname", @class = "text-danger errLabel" })
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <input type="submit" value="Save" class="btn btn-primary btn-fill" id="EmpDetSubmitBtn" />
                            <input type="button" value="Clear" onclick="ClearValues()" id="EmpClearBtn" class="btn btn-default btn-fill" />
                            <button type="button" class="btn btn-default btn-fill" onclick="ClearValues(); clearValidationError();" data-dismiss="modal">Close</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</body>
</html>
<script>
    var RolesList=@Html.Raw(Json.Encode(ViewBag.RoleList));
    var DesigList = @Html.Raw(Json.Encode(ViewBag.desigList));
    var ImgPath = "";
    var ExtChkFlg = false;
    var blockNumber = 1;  //Infinite Scroll starts from second block
    var NoMoreData = false;
    var inProgress = false;
    $('#EmpDateOfBirth').datepicker({
        format: "dd/mm/yyyy",
        changeMonth: true,
        changeYear: true,
        beforeShow: function(input) {
            $(input).datepicker("widget").removeClass('hide-calendar');
        }
    });
    function showLoad() {
        $("#imgProg").show();
        $(".usercontainer").addClass("disablediv");
        $(".WaitdivPage").css("display", "block");
    }
    function HideLoad() {
        $("#imgProg").hide();
        $(".usercontainer").removeClass("disablediv");
        $(".WaitdivPage").css("display", "none");
    }
    function viewEmpDetails(empId) {
        alert("Employee Id " + empId);
    }
    $(".dashboardContentDiv").scroll(function () {
        if ($(".wrapper").scrollTop() == $(".wrapper").height() - $(".dashboardContentDiv").height() && !NoMoreData && !inProgress) {
            inProgress = true;
            $("#loadingDiv").show();
            UpdateEmpTable(blockNumber);
        }
    });
    function UpdateEmpTable(currBlockNumber) {        
        var Refresh = {};
        Refresh.url = "/Admin/GetEmployeeData";
        Refresh.type = "POST";
        Refresh.data = JSON.stringify({BlockNumber:currBlockNumber});
        Refresh.datatype = "json";
        Refresh.contentType = "application/json";
        Refresh.success = function (status) {
            blockNumber = blockNumber + 1;
            if(!stringIsNull(status))
            {
                var response = JSON.parse(status);
                NoMoreData = response[0].NoMoreData;
                var maleAvatarPath = "../Content/Images/male-avatar.png";
                var femaleAvatarPath = "../Content/Images/female-avatar.png";
                //$('#cardContainer').empty();
                for (var i = 0; i <= response.length - 1 ; i++) {
                    if (response[i].Usertype != 1) {
                        response[i].UserPhotoPath = (stringIsNull(response[i].UserPhotoPath)
                            ? ((response[i].Gender.trim() == "M")
                            ? maleAvatarPath.toString() : femaleAvatarPath.toString()) : response[i].UserPhotoPath);

                        $('#cardContainer').append('<div class="col-lg-3 col-md-4 col-sm-4 col-xs-12"><div class="matcard card" onclick="viewEmpDetails(' + response[i].EmpID + ')" data-id="' + response[i].EmpID + '"><img class="usrAvatar" src=' + response[i].UserPhotoPath + '><div class="text-center"><h5><b>' + response[i].EmpName + '</b></h5><p>' + response[i].Designation + '</p></div></div></div>');
                    }
                }
            }
            HideLoad();
            $("#loadingDiv").hide();
            inProgress = false;
        };
        Refresh.error = function () {
            HideLoad();
            $("#loadingDiv").hide();
            showMessageBox(ERROR,"An UnExpected Error Occured !!");
        };
        $.ajax(Refresh);
    }
    function fileCheck(obj) {
        ExtChkFlg = false;
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            $('#ImageData').val('');
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
        }
        else{
            ExtChkFlg = true;
        }
    }
    $("#ImageData").change(function () {
        if(ExtChkFlg)
        {
            var data = new FormData();
            var files = $("#ImageData").get(0).files;
            if (files.length > 0) {
                data.append("MyImages", files[0]);
            }
            $.ajax({
                url: "/UploadPhoto/UploadFile",
                type: "POST",
                processData: false,
                contentType: false,
                data: data,
                success: function (response) {
                    var path = "../Content/UserIcons/" + response;
                    $('#UserPhotoPath').val(path);
                },
                error: function (er) {
                    alert(er);
                }
            });
        }
    });
    function UploadPhoto(){
        $('.upload-modal-title').text("Upload Photo");
    }
    function AddEmployee() {
        $('#EmpID').val('');
        $('#EmpIdRow').hide();
        $('#UserPhotoRow').show();
        $('.modal-title').text("Add Employee");
        $('#chnpwdbtn').hide();
        $('#PaswdRow').hide();
        $('#CnfrmPaswdRow').hide();
        $('#EmpDetSubmitBtn').show();
        $('#EmpClearBtn').show();
        EnableFields();
        ClearValues();

        var OptHtml = '<option value="' + 0 + '">' + "Select Role" + '</option>';
        $('#UserRole').empty();
        $('#UserRole').append(OptHtml);
        $.each(RolesList, function (i, option) {
            $('#UserRole').append($('<option/>').attr("value", option.Value).text(option.Text));
        });

        OptHtml = '<option value="' + 0 + '">' + "Select Designation" + '</option>';
        $('#EmpDesig').empty();
        $('#EmpDesig').append(OptHtml);
        $.each(DesigList, function (i, option) {
            $('#EmpDesig').append($('<option/>').attr("value", option.Value).text(option.Text));
        });
    }
    function DisableFields() {
        $('.inputField').attr('disabled', 'disabled');
    }
    function EnableFields() {
        $('.inputField').removeAttr('disabled');
        $('#EmpId').attr('disabled', 'disabled');
    }
    function ClearValues() {
        $('.inputField').val('');
        $('#Empgendermale').prop('checked', false);
        $('#Empgenderfemale').prop('checked', false);
        $('#SelGender').val('');
        $("#ImageData").val('');

        var OptHtml = '<option value="' + 0 + '">' + "Select Role" + '</option>';
        $('#UserRole').empty();
        $('#UserRole').append(OptHtml);
        $.each(RolesList, function (i, option) {
            $('#UserRole').append($('<option/>').attr("value", option.Value).text(option.Text));
        });

        clearValidationError();
    }
    $('#Empgendermale').change(function() {
        var checked = $(this).is(':checked');
        $('#Gender').val((checked)?'M':'F');
        $('#Empgenderfemale').prop('checked', !checked);
        $('#lblgender').hide();
    });
    $('#Empgenderfemale').change(function() {
        var checked = $(this).is(':checked');
        $('#Gender').val((checked)?'F':'M');
        $('#Empgendermale').prop('checked', !checked);
        $('#lblgender').hide();
    });
    $('#EmpName').on('blur', function () {
        if (this.value.toString().length == 0) {
            $('#EmpName').css('border-color', 'red');
            $('#lblempname').show();
        }
        else {
            $('#EmpName').css('border-color', '');
            $('#lblempname').hide();
        }
    });
    $('#desigDrpDwn').on('blur', function () {
        if (this.value.toString().length == 0) {
            $('#desigDrpDwn').css('border-color', 'red');
            $('#lblempDesig').show();
        }
        else {
            $('#desigDrpDwn').css('border-color', '');
            $('#lblempDesig').hide();
        }
    });
    $('#roleDropDwn').on('blur', function () {
        if (this.value.toString().length == 0) {
            $('#roleDropDwn').css('border-color', 'red');
            $('#lbluserrole').show();
        }
        else {
            $('#roleDropDwn').css('border-color', '');
            $('#lbluserrole').hide();
        }
    });
    $('#EmpDateOfBirth').on('blur', function () {
        if (this.value.toString().length == 0) {
            $('#EmpDateOfBirth').css('border-color', 'red');
            $('#ErrlblDateOfBirth').text("Select Date Of Birth");
            $('#ErrlblDateOfBirth').show();
        }
        else {
            $('#EmpDateOfBirth').css('border-color', '');
            $('#ErrlblDateOfBirth').hide();
        }
    });
    $('#EmpEmailId').on('blur', function () {
        if (this.value.toString().length == 0) {
            $('#EmpEmailId').css('border-color', 'red');
            $('#lblEmailId').text("Enter Email Id !!");
            $('#lblEmailId').show();
        }
        else {
            $('#EmpEmailId').css('border-color', '');
            $('#lblEmailId').hide();
        }
    });
    $('#EmpPhoneNumber').on('blur', function () {
        if (this.value.toString().length == 0) {
            $('#EmpPhoneNumber').css('border-color', 'red');
            $('#lblphonenumber').text("Enter Phone Number !");
            $('#lblphonenumber').show();
        }
        else {
            $('#EmpPhoneNumber').css('border-color', '');
            $('#lblphonenumber').hide();
        }
    });
    $('#EmpUserName').on('blur', function () {
        if (this.value.toString().length == 0) {
            $('#EmpUserName').css('border-color', 'red');
            $('#lblusername').show();
        }
        else {
            $('#EmpUserName').css('border-color', '');
            $('#lblusername').hide();
        }
    });
    $('#empSearchBox').on("keyup search input paste cut", function() {
        if(!stringIsNull($(this).val()))
        {
            //alert("ok");
        }
    });
    function empSearch()
    {

    }
    $( "#addEmpform" ).submit(function(event) {
        event.preventDefault();
        clearValidationError();
        //var idnew = $('#IDNew').val();
        var empname = $('#EmpName').val();
        var gender = $('#Gender').val();
        var utype = $('#roleDropDwn').val();
        var desig = $('#desigDrpDwn').val();
        var userphoto = $('#UserPhotoPath').val();
        var dob = $('#EmpDateOfBirth').val();
        var phone = $('#EmpPhoneNumber').val();
        var email = $('#EmpEmailId').val();
        var username = $('#EmpUserName').val();
        var userphotopath = $('#UserPhotoPath').val();

        var validFlag = false;
        if(stringIsNull(empname))
        {
            $('#EmpName').css('border-color','red');
            $('#lblempname').show();
            validFlag = true;
        }
        if(stringIsNull(gender))
        {
            $('#lblgender').show();
            validFlag = true;
        }
        if(stringIsNull(utype))
        {
            $('#roleDropDwn').css('border-color','red');
            $('#lbluserrole').show();
            validFlag = true;
        }
        if(stringIsNull(desig))
        {
            $('#desigDrpDwn').css('border-color','red');
            $('#lblempDesig').show();
            validFlag = true;
        }
        if(stringIsNull(dob))
        {
            $('#EmpDateOfBirth').css('border-color','red');
            $('#ErrlblDateOfBirth').text('Select Date of birth !')
            $('#ErrlblDateOfBirth').show();
            validFlag = true;
        }
        if(stringIsNull(phone))
        {
            $('#EmpPhoneNumber').css('border-color','red');
            $('#lblphonenumber').show();
            validFlag = true;
        }
        if(stringIsNull(email))
        {
            $('#EmpEmailId').css('border-color','red');
            $('#lblEmailId').show();
            validFlag = true;
        }
        if(stringIsNull(username))
        {
            $('#EmpUserName').css('border-color','red');
            $('#lblusername').show();
            validFlag = true;
        }

        if(!validFlag)
        {
            var addEmployee = {};
            addEmployee.url = "/Admin/ManageEmployee";
            addEmployee.type = "POST";
            addEmployee.data = JSON.stringify({empName:empname,userName:username,Gender:gender,Role:utype,Desig:desig,DateOfBirth:dob,EmailId:email,Phone:phone,UserPhotoPath:userphotopath});
            addEmployee.datatype = "json";
            addEmployee.contentType = "application/json";
            addEmployee.success = function (status) {
                if(!stringIsNull(status))
                {
                    var response = JSON.parse(status);

                    clearValidationError();
                    var errlst = response.split(":");
                    var errcnt = errlst.length;
                    for (var i = 0; i <= errcnt; i++) {

                        if (errlst[i] == 1) {
                            $('#EmpName').css('border-color','red');
                            $('#lblempname').show();
                        }
                        else if (errlst[i] == 2) {
                            $('#lblgender').show();
                        }
                        else if (errlst[i] == 3) {
                            $('#roleDropDwn').css('border-color','red');
                            $('#lbluserrole').show();
                        }
                        else if (errlst[i] == 4) {
                            $('#EmpDateOfBirth').css('border-color','red');
                            $('#ErrlblDateOfBirth').show();
                        }
                        else if (errlst[i] == 5) {
                            $('#EmpUserName').css('border-color','red');
                            $('#lblusername').show();
                        }
                        else if (errlst[i] == 6) {
                            $('#lblpassword').show();
                        }
                        else if (errlst[i] == "D") {
                            $('#desigDrpDwn').css('border-color','red');
                            $('#lblempDesig').show();
                        }
                        else if (errlst[i] == 7) {
                            $('#lblconfpassword').show();
                        }
                        else if (errlst[i] == 9) {
                            $('#EmpDateOfBirth').css('border-color','red');
                            $('#ErrlblDateOfBirth').text('Age must be greater than 18 !')
                            $('#ErrlblDateOfBirth').show();
                        }
                        else if (errlst[i] == "EN") {
                            $('#EmpEmailId').css('border-color','red');
                            $('#lblEmailId').show();
                        }
                        else if (errlst[i] == "ENV") {
                            $('#EmpEmailId').css('border-color','red');
                            $('#lblEmailId').text("Enter Valid Email Id !");
                            $('#lblEmailId').show();
                        }
                        else if (errlst[i] == "PN") {
                            $('#EmpPhoneNumber').css('border-color','red');
                            $('#lblphonenumber').show();
                        }
                        else if (errlst[i] == "PNV") {
                            $('#EmpPhoneNumber').css('border-color','red');
                            $('#lblphonenumber').text("Enter Valid PhoneNumber !");
                            $('#lblphonenumber').show();
                        }
                        else if (errlst[i] == "OK") {
                            $('#AddEmpModal').modal('toggle');
                            showMessageBox(SUCCESS,"Employee added successfully.");
                            showLoad();
                            UpdateEmpTable(1);
                        }
                        else if (errlst[i] == "ERROR") {
                            showMessageBox(ERROR,"An UnExpected Error Occured !");
                        }
                        else if (errlst[i] == "UD") {
                            $('#EmpUserName').css('border-color','red');
                            $('#lblDupUname').show();
                        }
                        else if (errlst[i] == "PD") {
                            $('#EmpPhoneNumber').css('border-color','red');
                            $('#lblphonenumber').text("Phone number already associated with another account !");
                            $('#lblphonenumber').show();
                        }
                        else if (errlst[i] == "ED") {
                            $('#EmpEmailId').css('border-color','red');
                            $('#lblEmailId').text("Email Id already associated with another account !");
                            $('#lblEmailId').show();
                        }
                        else if(errlst[i] == "IDOB")
                        {
                            $('#EmpDateOfBirth').css('border-color','red');
                            $('#ErrlblDateOfBirth').text('Invalid date time format !');
                            $('#ErrlblDateOfBirth').show();
                        }
                    }
                }
            };
            addEmployee.error = function () {
                showMessageBox(ERROR,"An UnExpected Error Occured!");
            };
            $.ajax(addEmployee);
        }
    });
</script>